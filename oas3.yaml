openapi: '3.0.3'
info:
  title: API MarkeTrento
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /:
    get:
      summary: Default page
      description: Returns the default page of the API.
      responses:
        '200':
          description: Home page
          content:
            html:
              schema:
                type: string
  /mercato:
    get:
      summary: Market page
      description: Returns the market page of the API.
      responses:
        '200':
          description: Market page
          content:
            html:
              schema:
                type: string
  /login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            html:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            html:
              schema:
                type: string
  /loginbusiness:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            html:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            html:
              schema:
                type: string
  /api/v1/prodotti: 
    post: 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                descrizione:
                  type: string
                venditore:
                  type: string
                quantita:
                  type: number  
                costo:
                  type: number    
                tag:
                  type: string
                immagine:
                  type: string
                  description: uri
      responses:
        '201':
          description: Created
        '500':
          description: Internal Server Error
  /api/v1/prodotti/{id}:
    get:
      responses:
        '200':
          description: A JSON with one product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  descrizione:
                    type: string
                  venditore:
                    type: string
                  quantita:
                    type: number  
                  costo:
                    type: number    
                  tag:
                    type: string
                  immagine:
                    type: string
                    description: uri
        '404':
          description: prodotto non trovato
        '500':
          description: Internal Server Error
    put: 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                nome:
                  type: string
                descrizione:
                  type: string
                venditore:
                  type: string
                quantita:
                  type: number  
                costo:
                  type: number    
                tag:
                  type: string
                immagine:
                  type: string
                  description: uri
      responses:
        '200':
          description: Prodotto aggiornato
        '500':
          description: Internal Server Error
    delete: 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                nome:
                  type: string
                descrizione:
                  type: string
                venditore:
                  type: string
                quantita:
                  type: number  
                costo:
                  type: number    
                tag:
                  type: string
                immagine:
                  type: string
                  description: uri
      responses:
        '200':
          description: Prodotto eliminato
        '500':
          description: Internal Server Error
  /api/v1/prodotti/venditore/{id}:
    get:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                nome:
                  type: string
                descrizione:
                  type: string
                venditore:
                  type: string
                quantita:
                  type: number  
                costo:
                  type: number    
                tag:
                  type: string
                immagine:
                  type: string
                  description: uri
      responses:
        '200':
          description: A JSON array of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nome:
                      type: string
                    descrizione:
                      type: string
                    venditore:
                      type: string
                    quantita:
                      type: number  
                    costo:
                      type: number    
                    tag:
                      type: string
                    immagine:
                      type: string
                      description: uri
        '404':
          description: Prodotto non trovato
        '500':
          description: Internal Server Error  
  /api/v1/venditori: 
    get:
      responses:
        '200':
          description: A JSON array of sellers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nome:
                      type: string
                    cognome:
                      type: string
                    birthdate:
                      type: string
                      description: date-time
                    email:
                      type: string
                      description: email
                    username:
                      type: string    
                    password:
                      type: string
                    sede:
                      type: string
                    descrizione:
                      type: string
                    tipo:
                      type: string
                    datiPagamento:
                      type: string
        '500':
          description: Internal Server Error
  /api/v1/venditori/{id}:
    get:
      responses:
        '200':
          description: A JSON with one seller
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  cognome:
                    type: string
                  birthdate:
                    type: string
                    description: date-time
                  email:
                    type: string
                    description: email
                  username:
                    type: string    
                  password:
                    type: string
                  sede:
                    type: string
                  descrizione:
                    type: string
                  tipo:
                    type: string
                  datiPagamento:
                    type: string
        '404':
          description: Venditore non trovato
        '500':
          description: Internal Server Error
  /api/v1/venditori/{id}/descrizione:
    put:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descrizione:
                  type: string
      responses:
        '200':
          description: Venditore aggiornato
        '500':
          description: Internal Server Error
  /api/v1/venditori/{id}/sede:
    put:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sede:
                  type: string
      responses:
        '200':
          description: Sede aggiornata
        '500':
          description: Internal Server Error
  /api/v1/venditori/registrazione:
    post:
      requestBody:
          $ref: '#/components/schemas/Venditore'
      responses:
        '201':
          description: Venditore creato
        '500':
          description: Errore del server
  /api/v1/tags:
    get:
      responses:
        '200':
          description: A JSON array of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nome:
                      type: string
        '500':
          description: Internal Server Error
  /api/v1/citytags:
    get:
      responses:
        '200':
          description: A JSON array of city tags
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    tag:
                      type: string
        '500':
          description: Internal Server Error


  /api/v1/clienti/{id}: 
    get:
      summary: Ottieni un cliente 
      description: Ottieni il cliente corrispondente all'id
      responses:
        '200':
          description: Cliente trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        '404':
          description: Cliente non trovato
        '500':
          description: Errore del server
    delete:
      summary: Cancella un cliente 
      description: Cancella il cliente corrispondente all'id
      responses:
        '200':
          description: Cliente eliminato con successo
        '404':
          description: Cliente non trovato
        '500':
          description: Errore del server
  
  /api/v1/accounts/cliente/{email}:
    get:
      summary: Retrieve a user account by email
      description: Retrieve a user account (Cliente, Imprenditore, Venditore, Admin) by email.
      responses:
        '200':
          description: Cliente trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        '404':
          description: Cliente non trovato
        '500':
          description: Errore del server
  /api/v1/accounts/imprenditore/{email}:
    get:
      summary: Retrieve an entrepreneur account by email
      description: Retrieve an entrepreneur account by email.
      responses:
        '200':
          description: Imprenditore trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imprenditore'
        '404':
          description: Imprenditore non trovato
        '500':
          description: Errore del server
  /api/v1/accounts/venditore/{email}:
    get:    
      summary: Retrieve a vendor account by email
      description: Retrieve a vendor account by email.
      responses:
        '200':
          description: Venditore trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venditore'
        '404':
          description: Venditore non trovato
        '500':
          description: Errore del server
  /api/v1/accounts/admin/{email}:
    get:
      summary: Retrieve an admin account by email
      description: Retrieve an admin account by email.
      responses:
        '200':
          description: Admin trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '404':
          description: Admin non trovato
        '500':
          description: Errore del server
  /api/v1/accounts/password:
    put:
      summary: Update user password
      description: Update the password of a user account (Cliente, Imprenditore, Venditore, Admin).
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password aggiornata con successo
        '400':
          description: Richiesta non valida
        '401':
          description: Vecchia password errata
        '404':
          description: Utente non trovato
        '500':
          description: Errore del server
  /api/v1/accounts/registrazione:
    post:
      summary: Register a new user account
      description: Register a new user account (Cliente) with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                cognome:
                  type: string
                birthdate:
                  type: string
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Registrazione avvenuta con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Richiesta non valida, campi mancanti
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        '500':
          description: Errore del server

  /api/v1/carrelli/{userType}/{userId}:
    get:
      summary: Ottieni il carrello dell'utente
      description: Restituisce i prodotti presenti nel carrello di un utente specifico (cliente, venditore, imprenditore).
      responses:
        '200':
          description: Lista dei prodotti nel carrello
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product' 
        '404':
          description: Carrello non trovato
        '500':
          description: Errore del server

  /api/v1/carrelli/{userType}/{userId}/add:
    post:
      summary: Aggiungi un prodotto al carrello
      description: Aggiunge un prodotto al carrello dell'utente. Tutti i prodotti devono appartenere allo stesso venditore.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                _id:
                  type: string
                  description: ID del prodotto
                nome:
                  type: string
                prezzo:
                  type: number
                quantity:
                  type: integer
      responses:
        '200':
          description: Prodotto aggiunto al carrello
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Errore di validazione (es. prodotti di venditori diversi)
        '404':
          description: Utente o prodotto non trovato
        '500':
          description: Errore del server

  /api/v1/carrelli/{userType}/{userId}/removeOne:
    post:
      summary: Rimuovi una quantità di un prodotto dal carrello
      description: Rimuove una quantità di un prodotto dal carrello dell'utente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
      responses:
        '200':
          description: Prodotto aggiornato
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Utente non trovato
        '500':
          description: Errore del server

  /api/v1/carrelli/{userType}/{userId}/clear:
    post:
      summary: Svuota il carrello dell'utente
      description: Svuota completamente il carrello dell'utente.
      responses:
        '200':
          description: Carrello svuotato
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Utente non trovato
        '500':
          description: Errore durante lo svuotamento del carrello
  /api/v1/consegne:
    get:
      summary: Ottieni tutte le consegne
      description: Restituisce tutte le consegne, ordinate per data di pubblicazione decrescente.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista delle consegne
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consegna'
        '500':
          description: Errore nel recupero delle consegne

    post:
      summary: Crea una nuova consegna
      description: Crea una nuova consegna con status "In consegna".
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
      responses:
        '201':
          description: Consegna creata con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  consegna:
                    $ref: '#/components/schemas/Consegna'
        '400':
          description: Dati di consegna mancanti
        '500':
          description: Errore durante la creazione della consegna

  /api/v1/consegne/inConsegna:
    get:
      summary: Ottieni la consegna più recente "In consegna"
      description: Restituisce la consegna più recente con status "In consegna".
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Consegna trovata o null se nessuna trovata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consegna'
        '500':
          description: Errore nel recupero delle consegne

  /api/v1/consegne/{id}:
    get:
      summary: Ottieni una consegna per ID
      description: Restituisce una consegna dato il suo ID.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Consegna trovata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consegna'
        '404':
          description: Consegna non trovata
        '500':
          description: Errore nel recupero delle consegne

    put:
      summary: Aggiungi un ordine a una consegna
      description: Aggiunge un ordine (id) all'array ordini della consegna.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ID dell'ordine da aggiungere
      responses:
        '200':
          description: Ordine aggiunto alla consegna
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  consegna:
                    $ref: '#/components/schemas/Consegna'
        '400':
          description: ID ordine mancante
        '404':
          description: Consegna non trovata
        '500':
          description: Errore durante l'aggiornamento della consegna

  /api/v1/consegne/{id}/svuota:
    put:
      summary: Svuota gli ordini di una consegna
      description: Svuota l'array degli ordini di una consegna e aggiorna la data.
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: date
      responses:
        '200':
          description: Consegna svuotata con successo
        '404':
          description: Consegna non trovata
        '500':
          description: Errore durante l'aggiornamento della consegna

  /api/v1/consegne/{id}/approva:
    put:
      summary: Approva una consegna
      description: Imposta lo status della consegna a "Consegnata".
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Consegna approvata con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  consegna:
                    $ref: '#/components/schemas/Consegna'
        '404':
          description: Consegna non trovata
        '500':
          description: Errore durante l'approvazione della consegna

  /api/v1/orders:
    get:
      summary: Ottieni tutti gli ordini
      description: Restituisce tutti gli ordini, con possibilità di filtrare per tipo utente e ID.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: userType
          schema:
            type: string
            enum: [cliente, venditore, imprenditore]
          description: Tipo di utente per filtrare gli ordini
        - in: query
          name: userId
          schema:
            type: string
          description: ID dell'utente per filtrare gli ordini
      responses:
        '200':
          description: Lista degli ordini
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '500':
          description: Errore nel recupero degli ordini

    post:
      summary: Crea un nuovo ordine
      description: Crea un nuovo ordine e aggiorna la quantità dei prodotti.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Ordine creato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Quantità insufficiente per uno o più prodotti
        '500':
          description: Errore durante il salvataggio dell'ordine

  /api/v1/orders/{id}:
    get:
      summary: Ottieni un ordine per ID
      description: Restituisce un ordine dato il suo ID.
      responses:
        '200':
          description: Ordine trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Ordine non trovato
        '500':
          description: Errore nel recupero dell'ordine

  /api/v1/orders/{id}/approve:
    post:
      summary: Approva un ordine
      description: Imposta lo stato dell'ordine a "In consegna".
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Ordine approvato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Ordine non trovato
        '500':
          description: Errore durante l'approvazione dell'ordine

  /api/v1/orders/{id}/rifiuta:
    post:
      summary: Rifiuta un ordine
      description: Imposta lo stato dell'ordine a "Rifiutato".
      responses:
        '200':
          description: Ordine rifiutato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Ordine non trovato
        '500':
          description: Errore durante il rifiuto dell'ordine

  /api/v1/orders/{id}/ritirato:
    put:
      summary: Marca un ordine come ritirato
      description: Imposta lo stato dell'ordine a "Ritirato".
      responses:
        '200':
          description: Ordine marcato come ritirato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Ordine non trovato
        '500':
          description: Errore durante la marcatura dell'ordine come ritirato

  /api/v1/orders/venditore/{id}:
    get:
      summary: Ottieni gli ordini di un venditore
      description: Restituisce gli ordini associati a un venditore, esclusi quelli rifiutati e quelli consegnati/ritirati da più di 21 giorni.
      responses:
        '200':
          description: Lista degli ordini del venditore
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '500':
          description: Errore nel recupero degli ordini per il venditore
  /api/v1/admin/{id}:
    get:
      summary: Ottieni un admin
      description: Ottieni Admin corrispondente all'id
      responses:
        '200':
          description: Admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '404':
          description: Admin non trovato
        '500':
          description: Errore del server
  /api/v1/admin:
    post:
      summary: Crea Admin
      description: Crea Admin
      requestBody:
        content:
          application/json:
            schema: 
              type: object
              properties:
                nome:
                  type: string
                cognome:
                  type: string
                birthdate:
                  type: string
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Admin creato con successo
        '400':
          description: Admin già esistente con questa email
        '500':
          description: Errore interno del server


  /api/v1/upgrades/registrazione:
    post:
      summary: Carica una richiesta di upgrade con PDF
      description: Permette a un imprenditore di caricare una richiesta di upgrade allegando un file PDF.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                imprenditore:
                  type: string
                  description: ID dell'imprenditore
                uploadDate:
                  type: string
                  format: date-time
                file:
                  type: string
                  format: binary
                  description: PDF da caricare
      responses:
        '201':
          description: File caricato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: string
        '400':
          description: Nessun file PDF caricato
        '500':
          description: Errore durante il caricamento del file

  /api/v1/upgrades:
    get:
      summary: Ottieni tutte le richieste di upgrade
      description: Restituisce tutte le richieste di upgrade caricate.
      responses:
        '200':
          description: Lista delle richieste di upgrade
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Upgrade'
        '404':
          description: Nessun file trovato
        '500':
          description: Errore interno del server

  /api/v1/upgrades/{id}/file:
    get:
      summary: Scarica il file PDF di una richiesta di upgrade
      description: Restituisce il file PDF associato a una richiesta di upgrade.
      responses:
        '200':
          description: File PDF restituito
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/PDF"
        '404':
          description: File non trovato
        '500':
          description: Errore durante il recupero del file

  /api/v1/upgrades/{id}/registrazione:
    get:
      summary: Scarica il file PDF come attachment
      description: Restituisce il file PDF come allegato per il download.
      responses:
        '200':
          description: File PDF restituito come attachment
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          description: File non trovato
        '500':
          description: Errore durante il recupero del file

  /api/v1/upgrades/{id}:
    delete:
      summary: Elimina una richiesta di upgrade
      description: Elimina una richiesta di upgrade dal database.
      responses:
        '200':
          description: File eliminato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: File non trovato
        '500':
          description: Errore durante l'eliminazione del file


  /api/v1/imprenditori/{id}/descrizione:
    put:
      summary: Aggiorna la descrizione di un imprenditore
      description: Aggiorna la descrizione di un imprenditore dato il suo ID.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                descrizione:
                  type: string
      responses:
        '200':
          description: Descrizione aggiornata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imprenditore'
        '500':
          description: Errore del server

  /api/v1/imprenditori/{id}/sede:
    put:
      summary: Aggiorna la sede di un imprenditore
      description: Aggiorna la sede di un imprenditore dato il suo ID.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sede:
                  type: string
      responses:
        '200':
          description: Sede aggiornata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imprenditore'
        '500':
          description: Errore del server

  /api/v1/imprenditori/add:
    post:
      summary: Crea un nuovo imprenditore
      description: Crea un nuovo imprenditore.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Imprenditore'
      responses:
        '201':
          description: Imprenditore creato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imprenditore'
        '500':
          description: Errore del server

  /api/v1/imprenditori/{id}:
    get:
      summary: Ottieni un imprenditore per ID
      description: Restituisce un imprenditore dato il suo ID.
      responses:
        '200':
          description: Imprenditore trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imprenditore'
        '404':
          description: Imprenditore non trovato
        '500':
          description: Errore del server

    delete:
      summary: Elimina un imprenditore
      description: Elimina un imprenditore dato il suo ID.
      responses:
        '200':
          description: Imprenditore eliminato con successo
        '404':
          description: Imprenditore non trovato
        '500':
          description: Errore del server
  /api/v1/recensioni:
    post:
      description: Aggiungi Recensione
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                titolo: 
                  type: string
                testo: 
                  type: string
                stelle: 
                  type: integer
                ordine:
                  type: string
      responses:
        '201':
          description: Recensione salvata con successo!
        '400':
          description: Errore nell'ordine (campi incompleti / già esistente)
        '404':  
          description: Ordine non trovato
        '500':
          description: Errore del server
  /api/v1/recensioni/venditore/{venditoreId}:
    get:
      description: Ottieni le recensioni per un venditore
      responses:
        '200':
          description: Ottieni recensioni associate al venditore
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recensione"
        '500':
          description: Errore del server
  /api/v1/promozioni: 
    get:
      summary: Crea una nuova promozione
      description: Crea una nuova promozione
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Ottieni promozioni
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '500':
          description: Internal server error
    post:
      summary: Crea una nuova promozione
      description: Crea una nuova promozione
      security:
        - bearerAuth: []
      responses:
        '201': 
          description: Promozione creata con successo
          content:
            application/formDta:
              schema:
                $ref: '#/components/schemas/Promotion'
        '500':
          description: Errore durante la creazione della promozione
  /api/v1/service/mail:
    post:
      summary: Manda una mail di conferma registrazione
      description: Manda una mail di conferma registrazione
      responses:
        '200':
          description: Email inviata con successo!
        '500':
          description: Errore durante l'invio dell'email
  /api/v1/service/mail/rifiuto-ordini:
    post:
      summary: Manda una mail di rifiuto ordine
      description: Manda una mail di rifiuto ordine
      responses:
        '200':
          description: Email inviata con successo!
        '500':
          description: Errore durante l'invio dell'email di rifiuto
  /authchecks/interfacciavenditore:
    get:
      summary: Interfaccia venditore
      description: Restituisce la pagina HTML dell'interfaccia venditore (solo per utenti con ruolo Venditore).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/carrello:
    get:
      summary: Carrello cliente
      description: Restituisce la pagina HTML del carrello (solo per utenti con ruolo Cliente).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/dettagliaccount:
    get:
      summary: Dettagli account cliente
      description: Restituisce la pagina HTML dei dettagli account (solo per utenti con ruolo Cliente).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/addPromo:
    get:
      summary: Aggiungi promozione (imprenditore)
      description: Restituisce la pagina HTML per aggiungere una promozione (solo per utenti con ruolo Imprenditore).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/ordini:
    get:
      summary: Ordini amministratore
      description: Restituisce la pagina HTML degli ordini (solo per utenti con ruolo Admin).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/admin:
    get:
      summary: Dettagli account amministratore
      description: Restituisce la pagina HTML dei dettagli account (solo per utenti con ruolo Admin).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/upgrade:
    get:
      summary: Registrazione venditore (imprenditore)
      description: Restituisce la pagina HTML per la registrazione venditore (solo per utenti con ruolo Imprenditore).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/upgrade-cliente:
    get:
      summary: Upgrade cliente
      description: Restituisce la pagina HTML per l'upgrade cliente (solo per utenti con ruolo Cliente).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/candidature:
    get:
      summary: Candidature amministratore
      description: Restituisce la pagina HTML delle candidature (solo per utenti con ruolo Admin).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/consegne:
    get:
      summary: Consegne amministratore
      description: Restituisce la pagina HTML delle consegne (solo per utenti con ruolo Admin).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato

  /authchecks/addConsegna:
    get:
      summary: Aggiungi consegna (admin)
      description: Restituisce la pagina HTML per aggiungere una consegna (solo per utenti con ruolo Admin).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pagina HTML restituita
          content:
            text/html:
              schema:
                type: string
        '401':
          description: Non autorizzato
components:
  schemas:
    Image: 
      type: object
      properties:
        data: 
          type: string
          description: binary
        contentType: 
          type: string
    PDF:
      type: object
      properties:
        data:
          type: string
          description: binary
        contentType:
          type: string
        fileName:
          type: string
    Cliente:
      type: object
      properties:
        nome:
          type: string
        cognome:
          type: string
        birthdate:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
        carrello:
          type: array
          items: 
            $ref: "#/components/schemas/Product"
    Imprenditore:
      type: object
      properties:
        nome:
          type: string
        cognome:
          type: string
        birthdate:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
        sede:
          type: string
        descrizone:
          type: string
        tipo:
          type: string
        carrello:
          type: array
          items: 
            $ref: "#/components/schemas/Product"
    Venditore:
      type: object
      properties:
        nome:
          type: string
        cognome:
          type: string
        birthdate:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
        sede:
          type: string
        descrizone:
          type: string
        tipo:
          type: string
        datiPagamento:
          type: string
        carrello:
          type: array
          items: 
            $ref: "#/components/schemas/Product"
    Admin:
      type: object
      properties:
        nome:
          type: string
        cognome:
          type: string
        birthdate:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
    Promotion:
      type: object
      properties:
        data:
          type: string
        titolo:
          type: string
        promotore:
          type: string
        descrizione:
          type: string
        img: 
          $ref: "#/components/schemas/Image"
        tipoAnnuncio:
          type: string
    Product:
      type: object
      properties:
        nome:
          type: string
        descrizione:
          type: string
        venditore:
          type: string
        quantita:
          type: integer
        costo:
          type: integer
        tag:
          type: string
        immagine:
          $ref: "#/components/schemas/Image"
    Order:
      type: object
      properties:
        prodotti:
          type: array
          items:
            items:
              type: object
            properties:
              _id:
                type: string
              nome:
                type: string
              prezzo:
                type: number
              quantity:
                type: integer
        venditore:
          type: string
        cliente:
          type: string
        clienteModel:
          type: string
        zona:
          type: string
        tipo:
          type: string
        pubblicazione:
          type: string
          description: date-time
        stato:
          type: string
    Consegna:
      type: object
      properties:
        ordini:
          type: array
          items:
            type: string
          description: array of id of orders
        data: 
          type: string
          description: date-time
        status:
          type: string
    Recensione:
      type: object
      properties:
        titolo:
          type: string
        testo:
          type: string
        stelle: 
          type: integer
        data: 
          type: string
          description: date-time
        ordine: 
          type: object
          description: reference to the order
    Upgrade:
      type: object
      properties:
        Imprenditore: 
          type: string
        file:
          $ref: "#/components/schemas/PDF"
        uploadDate:
          type: string
          description: date-time